name: Deploy using terragrunt

on:
  workflow_call:
    inputs:
      CLIENT_IMAGE:
        type: string
        required: true
      SERVER_IMAGE:
        type: string
        required: true
      TARGET_ENV:
        type: string
        required: true
      ALB_NAME:
        type: string
        required: true
      VPC_NAME:
        type: string
        required: true
      SUBNET_FILTER:
        type: string
        required: true

env:
  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: wfnews-dev

jobs:
  plan:
    name: Deploy
    runs-on: ubuntu-22.04
    outputs:
      pull_request_number: ${{ steps.pr.outputs.pull_request_number }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}
          
      - name: Get Pull Request Number
        id: pr
        run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update image name if PR number present
        if: ${{'' != steps.pr.outputs.pull_request_number}}
        run: echo "CLIENT_IMAGE = ${{inputs.CLIENT_IMAGE}}-${{ steps.pr.outputs.pull_request_number }}" >> $GITHUB_ENV &&\
             echo "SERVER_IMAGE = ${{inputs.SERVER_IMAGE}}-${{ steps.pr.outputs.pull_request_number }}" >> $GITHUB_ENV
          
      - name: Else, leave image names as they are
        if: ${{'' == steps.pr.outputs.pull_request_number}}
        run: echo "CLIENT_IMAGE = ${{inputs.CLIENT_IMAGE}} >> $GITHUB_ENV &&\ echo "SERVER_IMAGE = ${{inputs.SERVER_IMAGE}} >> $GITHUB_ENV

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}
      
      - name: Terragrunt Apply
        working-directory: ${{env.TG_SRC_PATH}}/${{ inputs.TARGET_ENV }}
        env:
          TARGET_ENV: ${{ inputs.TARGET_ENV }}
          CLIENT_IMAGE: ${{ env.CLIENT_IMAGE }}
          SERVER_IMAGE: ${{ env..SERVER_IMAGE }}
          TFC_PROJECT: ${{ secrets.LICENSE_PLATE }}
          DB_PASS: ${{ secrets.DB_PASS }}
          ALB_NAME: ${{ inputs.ALB_NAME }}
          VPC_NAME: ${{ inputs.VPC_NAME }}
          SUBNET_FILTER: ${{ inputs.SUBNET_FILTER }}
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

